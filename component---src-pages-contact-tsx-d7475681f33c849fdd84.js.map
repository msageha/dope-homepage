{"version":3,"file":"component---src-pages-contact-tsx-d7475681f33c849fdd84.js","mappings":"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","sources":["webpack://dope-inc/./src/components/Layout.tsx","webpack://dope-inc/./src/components/head.tsx","webpack://dope-inc/./src/pages/contact.tsx","webpack://dope-inc/./src/utils/color.ts","webpack://dope-inc/./src/utils/size.ts"],"sourcesContent":["import * as React from 'react';\nimport { Slice } from 'gatsby';\n\ninterface LayoutProps {\n    children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n    return (\n        <body className=\"flex flex-col min-h-screen\">\n            <Slice alias=\"Header\" />\n            <main className=\"flex-grow\">{children}</main>\n            <Slice alias=\"Footer\" />\n        </body>\n    );\n};\n\nexport default Layout;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\n\ninterface HeadProps {\n    title: string;\n    description?: string;\n    image?: string;\n    url: string;\n    companyName?: string;\n}\n\nconst Head: React.FC<HeadProps> = ({\n    title,\n    description,\n    image,\n    url,\n    companyName = '株式会社 Dope',\n}) => {\n    return (\n        <>\n            <title>{title}</title>\n            <meta charSet=\"utf-8\" />\n            <meta property=\"og:locale\" content=\"ja_JP\" />\n            <meta property=\"og:site_name\" content={companyName} />\n            <meta property=\"og:url\" content={url} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:title\" content={title} />\n            <meta\n                name=\"viewport\"\n                content=\"width=device-width, initial-scale=1\"\n            />\n            {description && (\n                <meta\n                    name=\"description\"\n                    property=\"og:description\"\n                    content={description}\n                />\n            )}\n            {image && <meta property=\"og:image\" content={image} />}\n            <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n            <link\n                rel=\"preconnect\"\n                href=\"https://fonts.gstatic.com\"\n                crossOrigin=\"\"\n            />\n            <link\n                rel=\"stylesheet\"\n                href=\"https://fonts.googleapis.com/css?family=Noto+Sans+JP:wght@400;700&display=swap\"\n            />\n        </>\n    );\n};\n\nexport default Head;\n\nexport const query = graphql`\n    query SiteMetaData {\n        site {\n            siteMetadata {\n                title\n                description\n                image\n                siteUrl\n            }\n        }\n    }\n`;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '@/components/Layout';\nimport SEOHead from '@/components/head';\nimport { getColor } from '@/utils/color';\nimport { getSize } from '@/utils/size';\n\nconst titleClasses = `mb-4 ${getSize('large')} ${getColor('secondary')}`;\nconst descriptionClasses = `mb-4 ${getSize('small')} ${getColor('secondary')}`;\n\ninterface ContractProps {\n    data: {\n        site: {\n            siteMetadata: {\n                title: string;\n                image: string;\n                siteUrl: string;\n            };\n        };\n    };\n}\n\nexport const Head = (props: ContractProps) => {\n    const { siteMetadata } = props.data.site;\n    const description =\n        '株式会社Dopeへのお問い合わせページです。AIソリューション、ITコンサルティング、データサイエンス、Webサイト・スマホアプリ開発など、様々なご相談を受け付けています。お気軽にお問い合わせください。';\n    return (\n        <SEOHead\n            title={siteMetadata.title}\n            description={description}\n            image={siteMetadata.image}\n            url={siteMetadata.siteUrl + '/contact'}\n        />\n    );\n};\n\nconst ContactForm = () => {\n    return (\n        <div className=\"my-20 justify-center py-12\">\n            <div className=\"relative py-3 sm:max-w-3xl sm:mx-auto\">\n                <div className=\"absolute inset-0 bg-gradient-to-r from-indigo-900 to-indigo-200 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl\"></div>\n                <div className=\"text-white relative py-10 bg-gray-800 shadow-lg sm:rounded-3xl \">\n                    <div className=\"text-center px-2 pb-6\">\n                        <h1 className={titleClasses}>Contact us!</h1>\n                        <p className={descriptionClasses}>\n                            お問い合わせの際は下記フォームをご利用ください。\n                        </p>\n                    </div>\n\n                    <iframe\n                        src=\"https://docs.google.com/forms/d/e/1FAIpQLSf78GNjoGzB5EeXJku_4fde5yY0px2KBKM8CyvgvWiFF1DZXQ/viewform?embedded=true\"\n                        width=\"100%\"\n                        height=\"1300\"\n                    >\n                        読み込んでいます…\n                    </iframe>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default function Page() {\n    return (\n        <Layout>\n            <ContactForm />\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query SiteMetaData {\n        site {\n            siteMetadata {\n                title\n                image\n                siteUrl\n            }\n        }\n    }\n`;\n","type Map = {\n    key: string;\n    value: string[];\n    hover: string[];\n    active: string[];\n};\n\nexport const ColorSetting: Map[] = [\n    {\n        key: 'default',\n        value: ['text-gray-700'],\n        hover: ['hover:text-gray-700'],\n        active: ['active:text-gray-900'],\n    },\n    {\n        key: 'primary',\n        value: ['text-gray-700'],\n        hover: ['hover:text-indigo-500'],\n        active: ['active:text-indigo-700'],\n    },\n    // {\n    //   key: \"primary-variant\",\n    //   class: [\"text-indigo-700\"],\n    //   hover: [\"hover:text-indigo-800\"],\n    //   active: [\"active:text-indigo-900\"],\n    // },\n    {\n        key: 'secondary',\n        value: ['text-white'],\n        hover: ['hover:text-green-600'],\n        active: ['active:text-green-700'],\n    },\n    // {\n    //   key: \"error\",\n    //   class: [\"text-red-500\"],\n    //   hover: [\"hover:text-red-600\"],\n    //   active: [\"active:text-red-800\"],\n    // },\n    // {\n    //   key: \"warning\",\n    //   class: [\"text-yellow-500\"],\n    //   hover: [\"hover:text-yellow-600\"],\n    //   active: [\"active:text-yellow-800\"],\n    // },\n    // {\n    //   key: \"success\",\n    //   class: [\"text-green-500\"],\n    //   hover: [\"hover:text-green-600\"],\n    //   active: [\"active:text-green-800\"],\n    // },\n];\n\nexport function getColor(\n    size: string,\n    hover?: boolean,\n    active?: boolean,\n): string {\n    const colorMap = ColorSetting.find((map) => map.key === size);\n\n    if (!colorMap) {\n        console.error(`Size \"${size}\" not found in ColorSetting`);\n        return '';\n    }\n\n    const classes = [...colorMap.value];\n    if (hover) {\n        classes.push(...colorMap.hover);\n    }\n    if (active) {\n        classes.push(...colorMap.active);\n    }\n    return classes.join(' ');\n}\n","import _ from 'lodash';\n\ntype Map = {\n    key: string;\n    value: string[];\n};\n\nexport const SizeSetting: Map[] = [\n    { key: 'small', value: ['text-base', 'md:text-lg', 'lg:text-xl'] },\n    { key: 'medium', value: ['text-lg', 'md:text-xl', 'lg:text-2xl'] },\n    { key: 'large', value: ['text-2xl', 'md:text-3xl', 'lg:text-4xl'] },\n    { key: 'extra-large', value: ['text-3xl', 'md:text-4xl', 'lg:text-5xl'] },\n];\n\nexport function getSize(size: string): string {\n    const sizeMap = SizeSetting.find((map) => map.key === size);\n\n    if (!sizeMap) {\n        console.error(`Size \"${size}\" not found in SizeSetting`);\n        return '';\n    }\n    const classes = sizeMap.value;\n    return classes.join(' ');\n}\n"],"names":["_ref","children","React","className","Slice","alias","title","description","image","url","companyName","charSet","property","content","name","rel","href","crossOrigin","titleClasses","getSize","getColor","descriptionClasses","Head","props","siteMetadata","data","site","SEOHead","siteUrl","ContactForm","src","width","height","Page","Layout","ColorSetting","key","value","hover","active","size","colorMap","find","map","console","error","classes","_toConsumableArray","push","apply","join","SizeSetting","sizeMap"],"sourceRoot":""}