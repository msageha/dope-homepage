{"version":3,"file":"slice---src-components-footer-tsx-dcaff08d70e250542b8b.js","mappings":"8KAee,SAASA,EAAOC,GAC3B,MAAMC,EAAcD,EAAME,KAAKC,KAAKC,aAAaH,YACjD,OACII,EAAAA,cAAA,UAAQC,UAAU,oBACdD,EAAAA,cAAA,KAAGC,UAAY,2BAAyBC,EAAAA,EAAAA,GAAQ,YAAY,UAC3CN,EAAY,yBAIzC,C,uDCjBO,MAAMO,EAAqB,CAChC,CAAEC,IAAK,QAASC,MAAO,CAAC,YAAa,aAAc,eACnD,CAAED,IAAK,SAAUC,MAAO,CAAC,UAAW,aAAc,gBAClD,CAAED,IAAK,QAASC,MAAO,CAAC,WAAY,cAAe,gBACnD,CAAED,IAAK,cAAeC,MAAO,CAAC,WAAY,cAAe,iBAGpD,SAASH,EAAQI,GACtB,MAAMC,EAAUJ,EAAYK,MAAMC,GAAQA,EAAIL,MAAQE,IAEtD,IAAKC,EAEH,OADAG,QAAQC,MAAO,SAAQL,+BAChB,GAGT,OADgBC,EAAQF,MACTO,KAAK,IACtB,C","sources":["webpack://dope-inc/./src/components/Footer.tsx","webpack://dope-inc/./src/utils/size.ts"],"sourcesContent":["// src/components/footer.tsx\nimport * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { getSize } from \"../utils/size\";\n\ninterface FooterProps {\n    data: {\n        site: {\n            siteMetadata: {\n                companyName: string;\n            };\n        };\n    };\n}\n\nexport default function Footer(props: FooterProps) {\n    const companyName = props.data.site.siteMetadata.companyName;\n    return (\n        <footer className=\"bg-gray-800 p-10\">\n            <p className={`text-white text-center ${getSize(\"small\")}`}>\n                &copy; 2023 {companyName} All rights reserved.\n            </p>\n        </footer>\n    );\n}\n\nexport const query = graphql`\n    query SiteMetaData {\n        site {\n            siteMetadata {\n                companyName\n            }\n        }\n    }\n`;\n","import _ from \"lodash\";\n\ntype Map = {\n  key: string;\n  value: string[];\n};\n\nexport const SizeSetting: Map[] = [\n  { key: \"small\", value: [\"text-base\", \"md:text-lg\", \"lg:text-xl\"]},\n  { key: \"medium\", value: [\"text-lg\", \"md:text-xl\", \"lg:text-2xl\"] },\n  { key: \"large\", value: [\"text-2xl\", \"md:text-3xl\", \"lg:text-4xl\"] },\n  { key: \"extra-large\", value: [\"text-3xl\", \"md:text-4xl\", \"lg:text-5xl\"] },\n];\n\nexport function getSize(size: string): string {\n  const sizeMap = SizeSetting.find((map) => map.key === size);\n\n  if (!sizeMap) {\n    console.error(`Size \"${size}\" not found in SizeSetting`);\n    return \"\";\n  }\n  const classes = sizeMap.value;\n  return classes.join(\" \");\n}\n"],"names":["Footer","props","companyName","data","site","siteMetadata","React","className","getSize","SizeSetting","key","value","size","sizeMap","find","map","console","error","join"],"sourceRoot":""}