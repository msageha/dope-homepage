{"version":3,"file":"component---src-pages-sitepolicy-tsx-192fb17625cb550450f6.js","mappings":"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","sources":["webpack://dope-inc/./src/components/Layout.tsx","webpack://dope-inc/./src/components/head.tsx","webpack://dope-inc/./src/pages/sitepolicy.tsx","webpack://dope-inc/./src/utils/color.ts","webpack://dope-inc/./src/utils/size.ts"],"sourcesContent":["import * as React from \"react\";\nimport { Slice } from \"gatsby\";\n\ninterface LayoutProps {\n    children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n    return (\n        <body className=\"flex flex-col min-h-screen\">\n            <Slice alias=\"Header\" />\n            <main className=\"flex-grow\">{children}</main>\n            <Slice alias=\"Footer\" />\n        </body>\n    );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\ninterface HeadProps {\n    title: string;\n    description?: string;\n    image?: string;\n    url: string;\n    companyName?: string;\n}\n\nconst Head: React.FC<HeadProps> = ({\n    title,\n    description,\n    image,\n    url,\n    companyName = \"株式会社 Dope\",\n}) => {\n    return (\n        <>\n            <title>{title}</title>\n            <meta charSet=\"utf-8\" />\n            <meta property=\"og:locale\" content=\"ja_JP\" />\n            <meta property=\"og:site_name\" content={companyName} />\n            <meta property=\"og:url\" content={url} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:title\" content={title} />\n            <meta\n                name=\"viewport\"\n                content=\"width=device-width, initial-scale=1\"\n            />\n            {description && (\n                <meta\n                    name=\"description\"\n                    property=\"og:description\"\n                    content={description}\n                />\n            )}\n            {image && <meta property=\"og:image\" content={image} />}\n            <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n            <link\n                rel=\"preconnect\"\n                href=\"https://fonts.gstatic.com\"\n                crossOrigin=\"\"\n            />\n            <link\n                rel=\"stylesheet\"\n                href=\"https://fonts.googleapis.com/css?family=Noto+Sans+JP:wght@400;700&display=swap\"\n            />\n        </>\n    );\n};\n\nexport default Head;\n\nexport const query = graphql`\n    query SiteMetaData {\n        site {\n            siteMetadata {\n                title\n                description\n                image\n                siteUrl\n            }\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport SEOHead from \"../components/head\";\nimport { getSize } from \"../utils/size\";\nimport { getColor } from \"../utils/color\";\n\ninterface SitePolicyProps {\n    data: {\n        site: {\n            siteMetadata: {\n                title: string;\n                description: string;\n                image: string;\n                siteUrl: string;\n            };\n        };\n    };\n}\n\nexport const Head = (props: SitePolicyProps) => {\n    const { siteMetadata } = props.data.site;\n    const description =\n        \"株式会社Dopeのウェブサイトは、利用規約に同意いただいた上でご利用ください。個人情報の取り扱いには厳重な注意を払っています。詳細については、以下のポリシーをご参照ください。。\";\n    return (\n        <SEOHead\n            title={siteMetadata.title}\n            description={description}\n            image={siteMetadata.image}\n            url={siteMetadata.siteUrl + \"/sitepolicy\"}\n        />\n    );\n};\n\nconst titleClasses = `mb-4 ${getSize(\"large\")} ${getColor(\"primary\")}`;\nconst subTitleClasses = `mb-4 ${getSize(\"medium\")} ${getColor(\"primary\")}`;\nconst descriptionClasses = `mb-8 ${getSize(\"small\")} ${getColor(\"primary\")}`;\n\nconst ParagraphLayer = ({\n    title,\n    description,\n}: {\n    title: string;\n    description: string;\n}) => {\n    console.log(description);\n    return (\n        <div className=\"container mx-auto my-8 px-10\">\n            <h2 className={subTitleClasses}>{title}</h2>\n\n            <p\n                className={descriptionClasses}\n                style={{ whiteSpace: \"pre-line\" }}\n            >\n                {description}\n            </p>\n        </div>\n    );\n};\n\nexport default function SitePolicy(props: SitePolicyProps) {\n    const { siteMetadata } = props.data.site;\n    const values = [\n        {\n            title: \"利用規約\",\n            description:\n                \"株式会社Dope（以下、「当社」とします）のウェブサイトをご利用いただく際には、以下の免責事項に同意していただく必要があります。当社ウェブサイトの利用は、以下の条件に従うものとします。\",\n        },\n        {\n            title: \"免責事項\",\n            description:\n                \"当社ウェブサイト上の情報は、最新の注意を払って掲載しておりますが、情報の正確性、完全性、有用性について、いかなる保証もいたしません。\\n当社ウェブサイトに掲載された情報によって生じた、いかなる損失や損害に対しても責任を負いません。\",\n        },\n        {\n            title: \"著作権および知的財産権\",\n            description:\n                \"当社ウェブサイト上のすべてのコンテンツ（テキスト、画像、ロゴ、デザイン等）は、当社または関連する第三者が所有しています。著作権法によって認められる場合を除き、著作権者の許可なく複製、転載、改変、または利用することは禁止されています。\",\n        },\n        {\n            title: \"個人情報の取り扱い\",\n            description:\n                \"当社は、個人情報を厳重に管理し、個人情報の保護に努めます。お客様から提供いただいた個人情報は、当社のプライバシーポリシーに基づき、適切かつ安全に取り扱います。\",\n        },\n    ];\n\n    return (\n        <Layout>\n            <div className=\"text-center my-8\">\n                <h1 className={titleClasses}>サイトポリシー</h1>\n            </div>\n            <div className=\" mx-auto max-w-screen-md\">\n                {values.map(({ title, description }) => (\n                    <ParagraphLayer title={title} description={description} />\n                ))}\n            </div>\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query SiteMetaData {\n        site {\n            siteMetadata {\n                title\n                description\n            }\n        }\n    }\n`;\n","type Map = {\n  key: string;\n  value: string[];\n  hover: string[];\n  active: string[];\n};\n\nexport const ColorSetting: Map[] = [\n  {\n    key: \"default\",\n    value: [\"text-gray-700\"],\n    hover: [\"hover:text-gray-700\"],\n    active: [\"active:text-gray-900\"],\n  },\n  {\n    key: \"primary\",\n    value: [\"text-gray-700\"],\n    hover: [\"hover:text-indigo-500\"],\n    active: [\"active:text-indigo-700\"],\n  },\n  // {\n  //   key: \"primary-variant\",\n  //   class: [\"text-indigo-700\"],\n  //   hover: [\"hover:text-indigo-800\"],\n  //   active: [\"active:text-indigo-900\"],\n  // },\n  {\n    key: \"secondary\",\n    value: [\"text-white\"],\n    hover: [\"hover:text-green-600\"],\n    active: [\"active:text-green-700\"],\n  },\n  // {\n  //   key: \"error\",\n  //   class: [\"text-red-500\"],\n  //   hover: [\"hover:text-red-600\"],\n  //   active: [\"active:text-red-800\"],\n  // },\n  // {\n  //   key: \"warning\",\n  //   class: [\"text-yellow-500\"],\n  //   hover: [\"hover:text-yellow-600\"],\n  //   active: [\"active:text-yellow-800\"],\n  // },\n  // {\n  //   key: \"success\",\n  //   class: [\"text-green-500\"],\n  //   hover: [\"hover:text-green-600\"],\n  //   active: [\"active:text-green-800\"],\n  // },\n];\n\nexport function getColor(size: string, hover?: boolean, active?: boolean): string {\n\n  const colorMap = ColorSetting.find((map) => map.key === size);\n\n  if (!colorMap) {\n    console.error(`Size \"${size}\" not found in ColorSetting`);\n    return \"\";\n  }\n\n  const classes = [...colorMap.value];\n  if (hover) {\n    classes.push(...colorMap.hover);\n  }\n  if (active) {\n    classes.push(...colorMap.active);\n  }\n  return classes.join(\" \");\n}\n","import _ from \"lodash\";\n\ntype Map = {\n  key: string;\n  value: string[];\n};\n\nexport const SizeSetting: Map[] = [\n  { key: \"small\", value: [\"text-base\", \"md:text-lg\", \"lg:text-xl\"]},\n  { key: \"medium\", value: [\"text-lg\", \"md:text-xl\", \"lg:text-2xl\"] },\n  { key: \"large\", value: [\"text-2xl\", \"md:text-3xl\", \"lg:text-4xl\"] },\n  { key: \"extra-large\", value: [\"text-3xl\", \"md:text-4xl\", \"lg:text-5xl\"] },\n];\n\nexport function getSize(size: string): string {\n  const sizeMap = SizeSetting.find((map) => map.key === size);\n\n  if (!sizeMap) {\n    console.error(`Size \"${size}\" not found in SizeSetting`);\n    return \"\";\n  }\n  const classes = sizeMap.value;\n  return classes.join(\" \");\n}\n"],"names":["_ref","children","React","className","Slice","alias","title","description","image","url","companyName","charSet","property","content","name","rel","href","crossOrigin","Head","props","siteMetadata","data","site","SEOHead","siteUrl","titleClasses","getSize","getColor","subTitleClasses","descriptionClasses","ParagraphLayer","console","log","style","whiteSpace","SitePolicy","Layout","map","_ref2","ColorSetting","key","value","hover","active","size","colorMap","find","error","classes","_toConsumableArray","push","apply","join","SizeSetting","sizeMap"],"sourceRoot":""}