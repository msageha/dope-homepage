{"version":3,"file":"component---src-pages-contact-tsx-cf1d1dc02453e66dd530.js","mappings":"iIAiBA,IAVsCA,IAAmB,IAAlB,SAAEC,GAAUD,EAC/C,OACIE,EAAAA,cAAA,QAAMC,UAAU,8BACZD,EAAAA,cAACE,EAAAA,GAAK,CAACC,MAAM,WACbH,EAAAA,cAAA,QAAMC,UAAU,aAAaF,GAC7BC,EAAAA,cAACE,EAAAA,GAAK,CAACC,MAAM,WACV,C,gHCNf,MAAMC,EAAgB,SAAOC,EAAAA,EAAAA,GAAQ,aAAYC,EAAAA,EAAAA,GAAS,eACpDC,EAAsB,SAAOF,EAAAA,EAAAA,GAAQ,aAAYC,EAAAA,EAAAA,GAAS,eAE1DE,EAAcA,IAEZR,EAAAA,cAAA,OAAKC,UAAU,iCACXD,EAAAA,cAAA,OAAKC,UAAU,yCACXD,EAAAA,cAAA,OAAKC,UAAU,0IACfD,EAAAA,cAAA,OAAKC,UAAU,mEACXD,EAAAA,cAAA,OAAKC,UAAU,yBACXD,EAAAA,cAAA,MAAIC,UAAWG,GAAc,eAC7BJ,EAAAA,cAAA,KAAGC,UAAWM,GAAoB,6BAKtCP,EAAAA,cAAA,UACIS,IAAI,oHACJC,MAAM,OACNC,OAAO,QACV,gBASN,SAASC,IACpB,OACIZ,EAAAA,cAACa,EAAAA,EAAM,KACHb,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACQ,EAAW,OAI5B,C,qECrCO,MAAMM,EAAsB,CACjC,CACEC,IAAK,UACLC,MAAO,CAAC,iBACRC,MAAO,CAAC,uBACRC,OAAQ,CAAC,yBAEX,CACEH,IAAK,UACLC,MAAO,CAAC,iBACRC,MAAO,CAAC,yBACRC,OAAQ,CAAC,2BAQX,CACEH,IAAK,YACLC,MAAO,CAAC,cACRC,MAAO,CAAC,wBACRC,OAAQ,CAAC,2BAsBN,SAASZ,EAASa,EAAcF,EAAiBC,GAEtD,MAAME,EAAWN,EAAaO,MAAMC,GAAQA,EAAIP,MAAQI,IAExD,IAAKC,EAEH,OADAG,QAAQC,MAAO,SAAQL,gCAChB,GAGT,MAAMM,GAAOC,EAAAA,EAAAA,GAAON,EAASJ,OAO7B,OANIC,GACFQ,EAAQE,KAAIC,MAAZH,GAAOC,EAAAA,EAAAA,GAASN,EAASH,QAEvBC,GACFO,EAAQE,KAAIC,MAAZH,GAAOC,EAAAA,EAAAA,GAASN,EAASF,SAEpBO,EAAQI,KAAK,IACtB,C,uDC9DO,MAAMC,EAAqB,CAChC,CAAEf,IAAK,QAASC,MAAO,CAAC,YAAa,aAAc,eACnD,CAAED,IAAK,SAAUC,MAAO,CAAC,UAAW,aAAc,gBAClD,CAAED,IAAK,QAASC,MAAO,CAAC,WAAY,cAAe,gBACnD,CAAED,IAAK,cAAeC,MAAO,CAAC,WAAY,cAAe,iBAGpD,SAASX,EAAQc,GACtB,MAAMY,EAAUD,EAAYT,MAAMC,GAAQA,EAAIP,MAAQI,IAEtD,IAAKY,EAEH,OADAR,QAAQC,MAAO,SAAQL,+BAChB,GAGT,OADgBY,EAAQf,MACTa,KAAK,IACtB,C","sources":["webpack://dope-inc/./src/components/Layout.tsx","webpack://dope-inc/./src/pages/contact.tsx","webpack://dope-inc/./src/utils/color.ts","webpack://dope-inc/./src/utils/size.ts"],"sourcesContent":["import * as React from \"react\";\nimport { Slice } from \"gatsby\";\n\ninterface LayoutProps {\n    children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n    return (\n        <body className=\"flex flex-col min-h-screen\">\n            <Slice alias=\"Header\" />\n            <main className=\"flex-grow\">{children}</main>\n            <Slice alias=\"Footer\" />\n        </body>\n    );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport Layout from \"../components/Layout\";\nimport SEOHead from \"../components/head\";\nimport { getSize } from \"../utils/size\";\nimport { getColor } from \"../utils/color\";\nimport { ChangeEvent, useState } from \"react\";\n\nconst titleClasses = `mb-4 ${getSize(\"large\")} ${getColor(\"secondary\")}`;\nconst descriptionClasses = `mb-4 ${getSize(\"small\")} ${getColor(\"secondary\")}`;\n\nconst ContactForm = () => {\n    return (\n        <div className=\"my-10 justify-center sm:py-12\">\n            <div className=\"relative py-3 sm:max-w-3xl sm:mx-auto\">\n                <div className=\"absolute inset-0 bg-gradient-to-r from-indigo-900 to-indigo-200 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl\"></div>\n                <div className=\"text-white relative py-10 bg-gray-800 shadow-lg sm:rounded-3xl \">\n                    <div className=\"text-center px-2 pb-6\">\n                        <h1 className={titleClasses}>Contact us!</h1>\n                        <p className={descriptionClasses}>\n                            お問い合わせの際は下記フォームをご利用ください。\n                        </p>\n                    </div>\n\n                    <iframe\n                        src=\"https://docs.google.com/forms/d/e/1FAIpQLSf78GNjoGzB5EeXJku_4fde5yY0px2KBKM8CyvgvWiFF1DZXQ/viewform?embedded=true\"\n                        width=\"100%\"\n                        height=\"1300\"\n                    >\n                        読み込んでいます…\n                    </iframe>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default function Page() {\n    return (\n        <Layout>\n            <>\n                <ContactForm />\n            </>\n        </Layout>\n    );\n}\n","type Map = {\n  key: string;\n  value: string[];\n  hover: string[];\n  active: string[];\n};\n\nexport const ColorSetting: Map[] = [\n  {\n    key: \"default\",\n    value: [\"text-gray-700\"],\n    hover: [\"hover:text-gray-700\"],\n    active: [\"active:text-gray-900\"],\n  },\n  {\n    key: \"primary\",\n    value: [\"text-gray-700\"],\n    hover: [\"hover:text-indigo-500\"],\n    active: [\"active:text-indigo-700\"],\n  },\n  // {\n  //   key: \"primary-variant\",\n  //   class: [\"text-indigo-700\"],\n  //   hover: [\"hover:text-indigo-800\"],\n  //   active: [\"active:text-indigo-900\"],\n  // },\n  {\n    key: \"secondary\",\n    value: [\"text-white\"],\n    hover: [\"hover:text-green-600\"],\n    active: [\"active:text-green-700\"],\n  },\n  // {\n  //   key: \"error\",\n  //   class: [\"text-red-500\"],\n  //   hover: [\"hover:text-red-600\"],\n  //   active: [\"active:text-red-800\"],\n  // },\n  // {\n  //   key: \"warning\",\n  //   class: [\"text-yellow-500\"],\n  //   hover: [\"hover:text-yellow-600\"],\n  //   active: [\"active:text-yellow-800\"],\n  // },\n  // {\n  //   key: \"success\",\n  //   class: [\"text-green-500\"],\n  //   hover: [\"hover:text-green-600\"],\n  //   active: [\"active:text-green-800\"],\n  // },\n];\n\nexport function getColor(size: string, hover?: boolean, active?: boolean): string {\n\n  const colorMap = ColorSetting.find((map) => map.key === size);\n\n  if (!colorMap) {\n    console.error(`Size \"${size}\" not found in ColorSetting`);\n    return \"\";\n  }\n\n  const classes = [...colorMap.value];\n  if (hover) {\n    classes.push(...colorMap.hover);\n  }\n  if (active) {\n    classes.push(...colorMap.active);\n  }\n  return classes.join(\" \");\n}\n","import _ from \"lodash\";\n\ntype Map = {\n  key: string;\n  value: string[];\n};\n\nexport const SizeSetting: Map[] = [\n  { key: \"small\", value: [\"text-base\", \"md:text-lg\", \"lg:text-xl\"]},\n  { key: \"medium\", value: [\"text-lg\", \"md:text-xl\", \"lg:text-2xl\"] },\n  { key: \"large\", value: [\"text-2xl\", \"md:text-3xl\", \"lg:text-4xl\"] },\n  { key: \"extra-large\", value: [\"text-3xl\", \"md:text-4xl\", \"lg:text-5xl\"] },\n];\n\nexport function getSize(size: string): string {\n  const sizeMap = SizeSetting.find((map) => map.key === size);\n\n  if (!sizeMap) {\n    console.error(`Size \"${size}\" not found in SizeSetting`);\n    return \"\";\n  }\n  const classes = sizeMap.value;\n  return classes.join(\" \");\n}\n"],"names":["_ref","children","React","className","Slice","alias","titleClasses","getSize","getColor","descriptionClasses","ContactForm","src","width","height","Page","Layout","ColorSetting","key","value","hover","active","size","colorMap","find","map","console","error","classes","_toConsumableArray","push","apply","join","SizeSetting","sizeMap"],"sourceRoot":""}