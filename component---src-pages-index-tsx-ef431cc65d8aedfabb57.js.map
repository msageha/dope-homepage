{"version":3,"file":"component---src-pages-index-tsx-ef431cc65d8aedfabb57.js","mappings":"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","sources":["webpack://dope-inc/./src/components/Layout.tsx","webpack://dope-inc/./src/components/head.tsx","webpack://dope-inc/./src/pages/index.tsx","webpack://dope-inc/./src/utils/color.ts","webpack://dope-inc/./src/utils/size.ts"],"sourcesContent":["import * as React from \"react\";\nimport { Slice } from \"gatsby\";\n\ninterface LayoutProps {\n    children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n    return (\n        <body className=\"flex flex-col min-h-screen\">\n            <Slice alias=\"Header\" />\n            <main className=\"flex-grow\">{children}</main>\n            <Slice alias=\"Footer\" />\n        </body>\n    );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\ninterface HeadProps {\n    title: string;\n    description?: string;\n    image?: string;\n    url: string;\n    companyName?: string;\n}\n\nconst Head: React.FC<HeadProps> = ({\n    title,\n    description,\n    image,\n    url,\n    companyName = \"株式会社 Dope\",\n}) => {\n    return (\n        <>\n            <title>{title}</title>\n            <meta charSet=\"utf-8\" />\n            <meta property=\"og:locale\" content=\"ja_JP\" />\n            <meta property=\"og:site_name\" content={companyName} />\n            <meta property=\"og:url\" content={url} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:title\" content={title} />\n            <meta\n                name=\"viewport\"\n                content=\"width=device-width, initial-scale=1\"\n            />\n            {description && (\n                <meta\n                    name=\"description\"\n                    property=\"og:description\"\n                    content={description}\n                />\n            )}\n            {image && <meta property=\"og:image\" content={image} />}\n            <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n            <link\n                rel=\"preconnect\"\n                href=\"https://fonts.gstatic.com\"\n                crossOrigin=\"\"\n            />\n            <link\n                rel=\"stylesheet\"\n                href=\"https://fonts.googleapis.com/css?family=Noto+Sans+JP:wght@400;700&display=swap\"\n            />\n        </>\n    );\n};\n\nexport default Head;\n\nexport const query = graphql`\n    query SiteMetaData {\n        site {\n            siteMetadata {\n                title\n                description\n                image\n                siteUrl\n            }\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport SEOHead from \"../components/head\";\nimport { getSize } from \"../utils/size\";\nimport { getColor } from \"../utils/color\";\n\ninterface HomepageProps {\n    data: {\n        site: {\n            siteMetadata: {\n                title: string;\n                image: string;\n                siteUrl: string;\n            };\n        };\n    };\n}\n\nexport const Head = (props: HomepageProps) => {\n    const { siteMetadata } = props.data.site;\n    const description =\n        \"株式会社Dopeは、先進のデータ駆動技術を活用し、お客様のビジネスを効果的に支援します。革新的なアプローチにより、パフォーマンス最適化や事業成長を促進し、ニーズに合わせたカスタムソリューションを提供します。データサイエンスとテクノロジーを融合し、お客様の可能性を最大限に引き出します。\";\n    return (\n        <SEOHead\n            title={siteMetadata.title}\n            description={description}\n            image={siteMetadata.image}\n            url={siteMetadata.siteUrl}\n        />\n    );\n};\n\nconst titleClasses = `mb-4 ${getSize(\"large\")} ${getColor(\"primary\")}`;\nconst subTitleClasses = `mb-4 ${getSize(\"medium\")} ${getColor(\"primary\")}`;\nconst descriptionClasses = `mb-8 ${getSize(\"small\")} ${getColor(\"primary\")}`;\n\nconst CompanyMission = () => {\n    const description =\n        \"　私たちの会社は、最新のデータ駆動型技術を活用し、お客様のビジネスを効果的にサポートします。データから導き出される革新的なアプローチにより、パフォーマンスの最適化や事業の成長を促進し、エクセレンスを切り拓きます。人工知能を中心に据え、お客様のニーズに合わせたカスタムソリューションの提供やビジネスのデータ駆動型意思決定の支援を行います。\\n　私たちは、データサイエンスとテクノロジーの力で、お客様が持つ可能性を最大限に引き出すお手伝いをいたします。\";\n\n    return (\n        <div className=\"container mx-auto my-8 px-10\">\n            <h1 className={titleClasses}>Mission</h1>\n            <p\n                className={descriptionClasses}\n                style={{ whiteSpace: \"pre-line\" }}\n            >\n                {description}\n            </p>\n        </div>\n    );\n};\n\nconst CompanyValues = () => {\n    const values = [\n        {\n            title: \"Discover Innovation\",\n            description:\n                \"データを使ったイノベーションの発見、新しい可能性を提供\",\n        },\n        {\n            title: \"Optimize Performance\",\n            description:\n                \"最適化されたパフォーマンスにより、効率的で高い業績を達成\",\n        },\n        {\n            title: \"Pioneer Excellence\",\n            description: \"卓越性を追求し、ビジネスにおいて先駆的な存在となる\",\n        },\n        {\n            title: \"Empower Growth\",\n            description: \"成長を促進し、お客様の事業を力強くサポート\",\n        },\n    ];\n\n    return (\n        <div className=\"container mx-auto my-8 px-10\">\n            <h1 className={titleClasses}>Values</h1>\n            <p className={descriptionClasses}>\n                　我々はDopeという社名の４つの頭文字を使った企業バリューを掲げています。\n                <br />　\n                <span className=\"font-semibold\">Discover（発見する）</span>、\n                <span className=\"font-semibold\">Optimize（最適化する）</span>、\n                <span className=\"font-semibold\">Pioneer（先駆ける）</span>、\n                <span className=\"font-semibold\">Empower（力を与える）</span>\n                の4つの価値を象徴しています。これらの価値を大切にし、世の中に最高のサービスを提供することをお約束します。\n            </p>\n            <ul className=\"mb-8\">\n                {values.map((policy, index) => (\n                    <li key={index}>\n                        <p className={`mb-2 italic ${subTitleClasses}`}>\n                            ・\n                            <span className=\"font-bold\">{policy.title[0]}</span>\n                            {policy.title.substring(1)}\n                        </p>\n                        <p className={`mb-6 ${descriptionClasses}`}>\n                            {policy.description}\n                        </p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default function Homepage(props: HomepageProps) {\n    const { siteMetadata } = props.data.site;\n\n    return (\n        <Layout>\n            <div className=\" mx-auto max-w-screen-md\">\n                {/* for SizeSetting\n                <div className=\"text-sm\">text-sm</div>\n                <div className=\"text-base\">text-base</div>\n                <div className=\"text-lg\">text-lg</div>\n                <div className=\"text-xl\">text-xl</div>\n                <div className=\"text-2xl\">text-2xl</div>\n                <div className=\"text-3xl\">text-3xl</div>\n                <div className=\"text-4xl\">text-4xl</div>\n                <div className=\"text-5xl\">text-5xl</div> */}\n                <CompanyMission />\n                <CompanyValues />\n            </div>\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query SiteMetaData {\n        site {\n            siteMetadata {\n                title\n                description\n                image\n                siteUrl\n            }\n        }\n    }\n`;\n","type Map = {\n  key: string;\n  value: string[];\n  hover: string[];\n  active: string[];\n};\n\nexport const ColorSetting: Map[] = [\n  {\n    key: \"default\",\n    value: [\"text-gray-700\"],\n    hover: [\"hover:text-gray-700\"],\n    active: [\"active:text-gray-900\"],\n  },\n  {\n    key: \"primary\",\n    value: [\"text-gray-700\"],\n    hover: [\"hover:text-indigo-500\"],\n    active: [\"active:text-indigo-700\"],\n  },\n  // {\n  //   key: \"primary-variant\",\n  //   class: [\"text-indigo-700\"],\n  //   hover: [\"hover:text-indigo-800\"],\n  //   active: [\"active:text-indigo-900\"],\n  // },\n  {\n    key: \"secondary\",\n    value: [\"text-white\"],\n    hover: [\"hover:text-green-600\"],\n    active: [\"active:text-green-700\"],\n  },\n  // {\n  //   key: \"error\",\n  //   class: [\"text-red-500\"],\n  //   hover: [\"hover:text-red-600\"],\n  //   active: [\"active:text-red-800\"],\n  // },\n  // {\n  //   key: \"warning\",\n  //   class: [\"text-yellow-500\"],\n  //   hover: [\"hover:text-yellow-600\"],\n  //   active: [\"active:text-yellow-800\"],\n  // },\n  // {\n  //   key: \"success\",\n  //   class: [\"text-green-500\"],\n  //   hover: [\"hover:text-green-600\"],\n  //   active: [\"active:text-green-800\"],\n  // },\n];\n\nexport function getColor(size: string, hover?: boolean, active?: boolean): string {\n\n  const colorMap = ColorSetting.find((map) => map.key === size);\n\n  if (!colorMap) {\n    console.error(`Size \"${size}\" not found in ColorSetting`);\n    return \"\";\n  }\n\n  const classes = [...colorMap.value];\n  if (hover) {\n    classes.push(...colorMap.hover);\n  }\n  if (active) {\n    classes.push(...colorMap.active);\n  }\n  return classes.join(\" \");\n}\n","import _ from \"lodash\";\n\ntype Map = {\n  key: string;\n  value: string[];\n};\n\nexport const SizeSetting: Map[] = [\n  { key: \"small\", value: [\"text-base\", \"md:text-lg\", \"lg:text-xl\"]},\n  { key: \"medium\", value: [\"text-lg\", \"md:text-xl\", \"lg:text-2xl\"] },\n  { key: \"large\", value: [\"text-2xl\", \"md:text-3xl\", \"lg:text-4xl\"] },\n  { key: \"extra-large\", value: [\"text-3xl\", \"md:text-4xl\", \"lg:text-5xl\"] },\n];\n\nexport function getSize(size: string): string {\n  const sizeMap = SizeSetting.find((map) => map.key === size);\n\n  if (!sizeMap) {\n    console.error(`Size \"${size}\" not found in SizeSetting`);\n    return \"\";\n  }\n  const classes = sizeMap.value;\n  return classes.join(\" \");\n}\n"],"names":["_ref","children","React","className","Slice","alias","title","description","image","url","companyName","charSet","property","content","name","rel","href","crossOrigin","Head","props","siteMetadata","data","site","SEOHead","siteUrl","titleClasses","getSize","getColor","subTitleClasses","descriptionClasses","CompanyMission","style","whiteSpace","CompanyValues","map","policy","index","key","substring","Homepage","Layout","ColorSetting","value","hover","active","size","colorMap","find","console","error","classes","_toConsumableArray","push","apply","join","SizeSetting","sizeMap"],"sourceRoot":""}